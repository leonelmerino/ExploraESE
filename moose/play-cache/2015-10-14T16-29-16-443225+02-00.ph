v := RTView new.els := RTBox new elementsOn: MooseModel root.v addAll: els.
RTNest new		for: els add: [ :group :model |			|nEls edges|			nEls := ((RTBox new color: [:e| e isStub ifTrue:[Color white] ifFalse:[Color red]]) elementsOn: model allClasses).			group addAll: nEls.			RTMetricNormalizer new				elements: nEls;				normalizeHeight: [:e| e methods isEmpty ifTrue:[1] ifFalse:[ e methods sum:[:m| m numberOfLinesOfCode ]]].			edges := RTEdgeBuilder new				view: group;				objects: model allClasses;				connectFrom: #superclass.			RTTreeLayout on: nEls edges: edges .			nEls @ RTPopup.			"RTGridLayout on: group" ].RTHorizontalLineLayout new alignBottom; horizontalGap: 30; on: (els asSortedCollection:[:a :b| (a model allMethods sum:[:m| m numberOfLinesOfCode]) >= (b model allMethods sum:[:m| m numberOfLinesOfCode])]).RTMetricNormalizer new		elements: els;"		normalizeWidth: [:e| e allMethods size];		normalizeHeight: [:e| e allMethods sum:[:m| m numberOfLinesOfCode] ];"		normalizeColor: [:e| e allMethods sum:[:m| m cyclomaticComplexity] ] using:{Color lightBlue . Color blue}.els @ RTDraggable.els @ RTPopup."els @ RTLabelled".v @ RTDraggableView.v 