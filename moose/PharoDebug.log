THERE_BE_DRAGONS_HERE
MessageNotUnderstood: RTElement>>allMethods
14 October 2015 4:41:27.6709 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

RTElement(Object)>>doesNotUnderstand: #allMethods
	Receiver: a RTElement
	Arguments and temporary variables: 
		aMessage: 	allMethods
		exception: 	MessageNotUnderstood: RTElement>>allMethods
		resumeValue: 	nil
	Receiver's instance variables: 
		announcer: 	an Announcer
		attributes: 	nil
		isFixed: 	false
		model: 	a MooseModel #'team1-2014'(5072)
		shape: 	a RTBox
		trachelShape: 	a TRBoxShape
		view: 	a RTView
		connectedEdges: 	nil
		shouldUpdateEdges: 	true


[ :a :b | (a allMethods sum: [ :m | m numberOfLinesOfCode ]) >= b allMethods sum: [ :m | m numberOfLinesOfCode ] ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		a: 	a RTElement
		b: 	a RTElement
	Receiver's instance variables: 
nil

SortedCollection>>sort:to:
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 
		i: 	1
		j: 	8
		di: 	a RTElement
		dij: 	nil
		dj: 	a RTElement
		tt: 	nil
		ij: 	nil
		k: 	nil
		l: 	nil
		n: 	8
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (a allMethods sum: [ :m | m numberOfLinesOfCode ]) >= b al...etc...


SortedCollection>>reSort
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (a allMethods sum: [ :m | m numberOfLinesOfCode ]) >= b al...etc...


SortedCollection>>addAll:
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 
		aCollection: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (a allMethods sum: [ :m | m numberOfLinesOfCode ]) >= b al...etc...


RTGroup(Collection)>>asSortedCollection:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aSortBlock: 	[ :a :b | (a allMethods sum: [ :m | m numberOfLinesOfCode ]) >= b a...etc...
		aSortedCollection: 	a SortedCollection(a RTElement a RTElement a RTElement a RTE...etc...
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		attributes: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel root....etc...
		itsSelection: 	a Text for 'v := RTView new.
els := RTBox new elementsOn: MooseMo...etc...
		itsSelectionString: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel r...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	v := RTView new.
	els := RTBox new elementsOn: MooseModel root.
	v a...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(307757056)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (994@278)
		owner: 	a TransformWithLayoutMorph(864026624)
		submorphs: 	an Array(a RubPrimarySelectionMorph(255066112) a RubCursor(775159808...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (770703360) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(837812224)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(775159808)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(961019904))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1039569
		lastStepMessage: 	nil
		lastCycleTime: 	1092809
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1092789
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1039569
		lastStepMessage: 	nil
		lastCycleTime: 	1092809
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1092789
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1039569
		lastStepMessage: 	nil
		lastCycleTime: 	1092809
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1092789
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
RTElement(Object)>>doesNotUnderstand: #allMethods
[ :a :b | (a allMethods sum: [ :m | m numberOfLinesOfCode ]) >= b allMethods sum: [ :m | m numberOfLinesOfCode ] ] in UndefinedObject>>DoIt
SortedCollection>>sort:to:
SortedCollection>>reSort
SortedCollection>>addAll:
RTGroup(Collection)>>asSortedCollection:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: FAMIXMethodGroup>>adaptToNumber:andSend:
14 October 2015 4:41:54.166218 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

FAMIXMethodGroup(Object)>>doesNotUnderstand: #adaptToNumber:andSend:
	Receiver: All famixmethods (875 FAMIXMethods)
	Arguments and temporary variables: 
		aMessage: 	adaptToNumber: 3384 andSend: #'>='
		exception: 	MessageNotUnderstood: FAMIXMethodGroup>>adaptToNumber:andSend:
		resumeValue: 	nil
	Receiver's instance variables: 
		mooseID: 	31833
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(PersonaLogoutSuccessHandler>>PersonaLogoutS...etc...


FAMIXMethodGroup(Object)>>adaptToInteger:andSend:
	Receiver: All famixmethods (875 FAMIXMethods)
	Arguments and temporary variables: 
		rcvr: 	3384
		selector: 	#'>='
	Receiver's instance variables: 
		mooseID: 	31833
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(PersonaLogoutSuccessHandler>>PersonaLogoutS...etc...


FAMIXMethodGroup(Object)>>adaptToInteger:andCompare:
	Receiver: All famixmethods (875 FAMIXMethods)
	Arguments and temporary variables: 
		rcvr: 	3384
		selector: 	#'>='
	Receiver's instance variables: 
		mooseID: 	31833
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(PersonaLogoutSuccessHandler>>PersonaLogoutS...etc...


SmallInteger(Integer)>>>=
	Receiver: 3384
	Arguments and temporary variables: 
		aNumber: 	All famixmethods (875 FAMIXMethods)
	Receiver's instance variables: 
3384

SmallInteger>>>=
	Receiver: 3384
	Arguments and temporary variables: 
		aNumber: 	All famixmethods (875 FAMIXMethods)
	Receiver's instance variables: 
3384

[ :a :b | (a model allMethods sum: [ :m | m numberOfLinesOfCode ]) >= b model allMethods sum: [ :m | m numberOfLinesOfCode ] ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		a: 	a RTElement
		b: 	a RTElement
	Receiver's instance variables: 
nil

SortedCollection>>sort:to:
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 
		i: 	1
		j: 	8
		di: 	a RTElement
		dij: 	nil
		dj: 	a RTElement
		tt: 	nil
		ij: 	nil
		k: 	nil
		l: 	nil
		n: 	8
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (a model allMethods sum: [ :m | m numberOfLinesOfCode ]) >...etc...


SortedCollection>>reSort
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (a model allMethods sum: [ :m | m numberOfLinesOfCode ]) >...etc...


SortedCollection>>addAll:
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 
		aCollection: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (a model allMethods sum: [ :m | m numberOfLinesOfCode ]) >...etc...


RTGroup(Collection)>>asSortedCollection:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aSortBlock: 	[ :a :b | (a model allMethods sum: [ :m | m numberOfLinesOfCode ]) ...etc...
		aSortedCollection: 	a SortedCollection(a RTElement a RTElement a RTElement a RTE...etc...
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		attributes: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel root....etc...
		itsSelection: 	a Text for 'v := RTView new.
els := RTBox new elementsOn: MooseMo...etc...
		itsSelectionString: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel r...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	v := RTView new.
	els := RTBox new elementsOn: MooseModel root.
	v a...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(307757056)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (994@278)
		owner: 	a TransformWithLayoutMorph(864026624)
		submorphs: 	an Array(a RubPrimarySelectionMorph(255066112) a RubCursor(775159808...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (770703360) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(837812224)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(775159808)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(778829824))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1039569
		lastStepMessage: 	nil
		lastCycleTime: 	1119315
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1119294
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1039569
		lastStepMessage: 	nil
		lastCycleTime: 	1119315
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1119294
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1039569
		lastStepMessage: 	nil
		lastCycleTime: 	1119315
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1119294
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
FAMIXMethodGroup(Object)>>doesNotUnderstand: #adaptToNumber:andSend:
FAMIXMethodGroup(Object)>>adaptToInteger:andSend:
FAMIXMethodGroup(Object)>>adaptToInteger:andCompare:
SmallInteger(Integer)>>>=
SmallInteger>>>=
[ :a :b | (a model allMethods sum: [ :m | m numberOfLinesOfCode ]) >= b model allMethods sum: [ :m | m numberOfLinesOfCode ] ] in UndefinedObject>>DoIt
SortedCollection>>sort:to:
SortedCollection>>reSort
SortedCollection>>addAll:
RTGroup(Collection)>>asSortedCollection:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: MooseModel>>allDependencies
14 October 2015 4:51:23.442844 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

MooseModel(Object)>>doesNotUnderstand: #allDependencies
	Receiver: a MooseModel #'team1-2014'(5072)
	Arguments and temporary variables: 
		aMessage: 	allDependencies
		exception: 	MessageNotUnderstood: MooseModel>>allDependencies
		resumeValue: 	nil
	Receiver's instance variables: 
		mooseID: 	2
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(saveTestData -> adLuzern#setSmokers(false) ...etc...
		sourceLanguage: 	a FAMIXJavaSourceLanguage #Java
		name: 	'team1-2014'


[ :e | e allDependencies size ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		e: 	a MooseModel #'team1-2014'(5072)
	Receiver's instance variables: 
nil

BlockClosure>>rtValue:
	Receiver: [ :e | e allDependencies size ]
	Arguments and temporary variables: 
		valueOrArray: 	a MooseModel #'team1-2014'(5072)
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	219
		numArgs: 	1


RTMetricNormalizer>>normalizeHeight:min:max:using:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		minValue: 	nil
		maxValue: 	nil
		metricBlock: 	[ :e | e allDependencies size ]
		min: 	5
		max: 	30
		transformation: 	#yourself
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:min:max:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | e allDependencies size ]
		minValue: 	5
		maxValue: 	30
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | e allDependencies size ]
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel root....etc...
		itsSelection: 	a Text for 'v := RTView new.
els := RTBox new elementsOn: MooseMo...etc...
		itsSelectionString: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel r...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	v := RTView new.
	els := RTBox new elementsOn: MooseModel root.
	v a...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(307757056)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (994@297)
		owner: 	a TransformWithLayoutMorph(864026624)
		submorphs: 	an Array(a RubPrimarySelectionMorph(255066112) a RubCursor(775159808...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (770703360) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(837812224)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(775159808)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(697303040))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1572707
		lastStepMessage: 	nil
		lastCycleTime: 	1688572
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1688552
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1572707
		lastStepMessage: 	nil
		lastCycleTime: 	1688572
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1688552
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1572707
		lastStepMessage: 	nil
		lastCycleTime: 	1688572
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1688552
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
MooseModel(Object)>>doesNotUnderstand: #allDependencies
[ :e | e allDependencies size ] in UndefinedObject>>DoIt
BlockClosure>>rtValue:
RTMetricNormalizer>>normalizeHeight:min:max:using:
RTMetricNormalizer>>normalizeHeight:min:max:
RTMetricNormalizer>>normalizeHeight:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "first" is nil
14 October 2015 4:56:02.194923 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

UndefinedObject(Object)>>doesNotUnderstand: #first
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	first
		exception: 	MessageNotUnderstood: receiver of "first" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'root first allClasses first '
		itsSelection: 	a Text for 'root first allClasses first '
		itsSelectionString: 	'root first allClasses first '
	Receiver's instance variables: 
		ast: 	DoIt
	^ root first allClasses first
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(307757056)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (994@506)
		owner: 	a TransformWithLayoutMorph(864026624)
		submorphs: 	an Array(a RubPrimarySelectionMorph(255066112) a RubCursor(775159808...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (770703360) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(837812224)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(775159808)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(184025088))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1572707
		lastStepMessage: 	nil
		lastCycleTime: 	1967358
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1967336
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1572707
		lastStepMessage: 	nil
		lastCycleTime: 	1967358
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1967336
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1572707
		lastStepMessage: 	nil
		lastCycleTime: 	1967358
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	1967336
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #first
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: FAMIXClass>>allMethod
14 October 2015 4:56:33.551332 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

FAMIXClass(Object)>>doesNotUnderstand: #allMethod
	Receiver: <StubMethodContainer> in <Default Package> (Class)
	Arguments and temporary variables: 
		aMessage: 	allMethod
		exception: 	MessageNotUnderstood: FAMIXClass>>allMethod
		resumeValue: 	nil
	Receiver's instance variables: 
		mooseID: 	2818
		state: 	a MooseDefaultState
		sourceAnchor: 	nil
		sourceLanguage: 	nil
		comments: 	#()
		declaredSourceLanguage: 	nil
		name: 	'<StubMethodContainer>'
		isStub: 	true
		receivingInvocations: 	#()
		modifiers: 	a Set()
		parentPackage: 	nil
		annotationInstances: 	#()
		outgoingReferences: 	#()
		types: 	#()
		incomingReferences: 	#()
		functions: 	#()
		subInheritances: 	#()
		methods: 	an Array(<StubMethodContainer>>>addObject(?,?) (Method) <StubMethodCon...etc...
		container: 	<Default Package> (Namespace)
		superInheritances: 	an Array(<StubMethodContainer> -> Object (Inheritance))
		attributes: 	#()
		behavioursWithDeclaredType: 	#()
		structuresWithDeclaredType: 	#()
		isInterface: 	false


FAMIXClass>>DoIt
	Receiver: <StubMethodContainer> in <Default Package> (Class)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		mooseID: 	2818
		state: 	a MooseDefaultState
		sourceAnchor: 	nil
		sourceLanguage: 	nil
		comments: 	#()
		declaredSourceLanguage: 	nil
		name: 	'<StubMethodContainer>'
		isStub: 	true
		receivingInvocations: 	#()
		modifiers: 	a Set()
		parentPackage: 	nil
		annotationInstances: 	#()
		outgoingReferences: 	#()
		types: 	#()
		incomingReferences: 	#()
		functions: 	#()
		subInheritances: 	#()
		methods: 	an Array(<StubMethodContainer>>>addObject(?,?) (Method) <StubMethodCon...etc...
		container: 	<Default Package> (Namespace)
		superInheritances: 	an Array(<StubMethodContainer> -> Object (Inheritance))
		attributes: 	#()
		behavioursWithDeclaredType: 	#()
		structuresWithDeclaredType: 	#()
		isInterface: 	false


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'self allMethod'
		itsSelection: 	a Text for 'self allMethod'
		itsSelectionString: 	'self allMethod'
	Receiver's instance variables: 
		ast: 	DoIt
	^ self allMethod
		source: 	a ReadStream
		context: 	nil
		receiver: 	<StubMethodContainer> in <Default Package> (Class)
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	<StubMethodContainer> in <Default Package> (Class)
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(28573696)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(28573696)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(632815616)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(28573696)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (570@50)
		owner: 	a TransformWithLayoutMorph(736624640)
		submorphs: 	an Array(a RubPrimarySelectionMorph(184287232) a RubCursor(499122176...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (494665728) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(710410240)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(499122176)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(716963840))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(632815616)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	1998712
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(499122176)))
		lastAlarmTime: 	1998691
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(121896960) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	1998712
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(499122176)))
		lastAlarmTime: 	1998691
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	1998712
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(499122176)))
		lastAlarmTime: 	1998691
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(121896960) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
FAMIXClass(Object)>>doesNotUnderstand: #allMethod
FAMIXClass>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: FAMIXClass>>allMethods
14 October 2015 4:56:38.921441 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

FAMIXClass(Object)>>doesNotUnderstand: #allMethods
	Receiver: <StubMethodContainer> in <Default Package> (Class)
	Arguments and temporary variables: 
		aMessage: 	allMethods
		exception: 	MessageNotUnderstood: FAMIXClass>>allMethods
		resumeValue: 	nil
	Receiver's instance variables: 
		mooseID: 	2818
		state: 	a MooseDefaultState
		sourceAnchor: 	nil
		sourceLanguage: 	nil
		comments: 	#()
		declaredSourceLanguage: 	nil
		name: 	'<StubMethodContainer>'
		isStub: 	true
		receivingInvocations: 	#()
		modifiers: 	a Set()
		parentPackage: 	nil
		annotationInstances: 	#()
		outgoingReferences: 	#()
		types: 	#()
		incomingReferences: 	#()
		functions: 	#()
		subInheritances: 	#()
		methods: 	an Array(<StubMethodContainer>>>addObject(?,?) (Method) <StubMethodCon...etc...
		container: 	<Default Package> (Namespace)
		superInheritances: 	an Array(<StubMethodContainer> -> Object (Inheritance))
		attributes: 	#()
		behavioursWithDeclaredType: 	#()
		structuresWithDeclaredType: 	#()
		isInterface: 	false


FAMIXClass>>DoIt
	Receiver: <StubMethodContainer> in <Default Package> (Class)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		mooseID: 	2818
		state: 	a MooseDefaultState
		sourceAnchor: 	nil
		sourceLanguage: 	nil
		comments: 	#()
		declaredSourceLanguage: 	nil
		name: 	'<StubMethodContainer>'
		isStub: 	true
		receivingInvocations: 	#()
		modifiers: 	a Set()
		parentPackage: 	nil
		annotationInstances: 	#()
		outgoingReferences: 	#()
		types: 	#()
		incomingReferences: 	#()
		functions: 	#()
		subInheritances: 	#()
		methods: 	an Array(<StubMethodContainer>>>addObject(?,?) (Method) <StubMethodCon...etc...
		container: 	<Default Package> (Namespace)
		superInheritances: 	an Array(<StubMethodContainer> -> Object (Inheritance))
		attributes: 	#()
		behavioursWithDeclaredType: 	#()
		structuresWithDeclaredType: 	#()
		isInterface: 	false


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'self allMethods'
		itsSelection: 	a Text for 'self allMethods'
		itsSelectionString: 	'self allMethods'
	Receiver's instance variables: 
		ast: 	DoIt
	^ self allMethods
		source: 	a ReadStream
		context: 	nil
		receiver: 	<StubMethodContainer> in <Default Package> (Class)
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	<StubMethodContainer> in <Default Package> (Class)
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(28573696)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(28573696)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(632815616)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(28573696)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (570@50)
		owner: 	a TransformWithLayoutMorph(736624640)
		submorphs: 	an Array(a RubPrimarySelectionMorph(184287232) a RubCursor(499122176...etc...
		fullBounds: 	(0@0) corner: (570@50)
		color: 	Color transparent
		extension: 	a MorphExtension (494665728) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(710410240)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(499122176)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(454295552))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(632815616)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	2004102
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(499122176)))
		lastAlarmTime: 	2004102
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(121896960) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	2004102
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(499122176)))
		lastAlarmTime: 	2004102
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	2004102
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(499122176)))
		lastAlarmTime: 	2004102
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(121896960) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
FAMIXClass(Object)>>doesNotUnderstand: #allMethods
FAMIXClass>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: MooseModel>>methods
14 October 2015 4:57:14.263752 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

MooseModel(Object)>>doesNotUnderstand: #methods
	Receiver: a MooseModel #'team1-2014'(5072)
	Arguments and temporary variables: 
		aMessage: 	methods
		exception: 	MessageNotUnderstood: MooseModel>>methods
		resumeValue: 	nil
	Receiver's instance variables: 
		mooseID: 	2
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(saveTestData -> adLuzern#setSmokers(false) ...etc...
		sourceLanguage: 	a FAMIXJavaSourceLanguage #Java
		name: 	'team1-2014'


[ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ] in [ :group :model | 
| nEls |
nEls := group addAll: ((RTBox new color: Color red) elementsOn: model allModelClasses).
RTMetricNormalizer new
	elements: els;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		e: 	a MooseModel #'team1-2014'(5072)
	Receiver's instance variables: 
nil

BlockClosure>>rtValue:
	Receiver: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ]
	Arguments and temporary variables: 
		valueOrArray: 	a MooseModel #'team1-2014'(5072)
	Receiver's instance variables: 
		outerContext: 	[ :group :model | 
| nEls |
nEls := group addAll: ((RTBox new col...etc...
		startpc: 	201
		numArgs: 	1


RTMetricNormalizer>>normalizeHeight:min:max:using:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		minValue: 	nil
		maxValue: 	nil
		metricBlock: 	[ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ]
		min: 	5
		max: 	30
		transformation: 	#yourself
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:min:max:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ]
		minValue: 	5
		maxValue: 	30
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ]
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


[ :group :model | 
| nEls |
nEls := group addAll: ((RTBox new color: Color red) elementsOn: model allModelClasses).
RTMetricNormalizer new
	elements: els;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
	Receiver's instance variables: 
nil

[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls |
nEls := group addAll: ((RTBox new col...etc...
		allAddedObject: 	a RTGroup()
		element: 	a RTElement
		g: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTEl...etc...
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


RTGroup(OrderedCollection)>>do:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: elem...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		attributes: 	nil


RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls |
nEls := group addAll: ((RTBox new col...etc...
		allAddedObject: 	a RTGroup()
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel root....etc...
		itsSelection: 	a Text for 'v := RTView new.
els := RTBox new elementsOn: MooseMo...etc...
		itsSelectionString: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel r...etc...
	Receiver's instance variables: 
		ast: 	<<error during printing>>

RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(307757056)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (994@506)
		owner: 	a TransformWithLayoutMorph(864026624)
		submorphs: 	an Array(a RubPrimarySelectionMorph(171966464) a RubCursor(775159808...etc...
		fullBounds: 	(0@0) corner: (994@506)
		color: 	Color transparent
		extension: 	a MorphExtension (770703360) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(837812224)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(775159808)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(197132288))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	2039533
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2039535
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	2039533
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2039535
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	2039533
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2039535
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
MooseModel(Object)>>doesNotUnderstand: #methods
[ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ] in [ :group :model | 
| nEls |
nEls := group addAll: ((RTBox new color: Color red) elementsOn: model allModelClasses).
RTMetricNormalizer new
	elements: els;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
BlockClosure>>rtValue:
RTMetricNormalizer>>normalizeHeight:min:max:using:
RTMetricNormalizer>>normalizeHeight:min:max:
RTMetricNormalizer>>normalizeHeight:
[ :group :model | 
| nEls |
nEls := group addAll: ((RTBox new color: Color red) elementsOn: model allModelClasses).
RTMetricNormalizer new
	elements: els;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
RTGroup(OrderedCollection)>>do:
RTNest>>for:add:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
CollectionIsEmpty: #() is empty
14 October 2015 4:57:46.947206 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

FMNullMultivalueLink(Collection)>>errorEmptyCollection
	Receiver: #()
	Arguments and temporary variables: 

	Receiver's instance variables: 
		selector: 	#methods
		owner: 	PlaceAdController in ch::unibe::ese::team1::controller (Class)
		opposite: 	#parentType:


FMNullMultivalueLink(Collection)>>emptyCheck
	Receiver: #()
	Arguments and temporary variables: 

	Receiver's instance variables: 
		selector: 	#methods
		owner: 	PlaceAdController in ch::unibe::ese::team1::controller (Class)
		opposite: 	#parentType:


FMNullMultivalueLink(Collection)>>anyOne
	Receiver: #()
	Arguments and temporary variables: 

	Receiver's instance variables: 
		selector: 	#methods
		owner: 	PlaceAdController in ch::unibe::ese::team1::controller (Class)
		opposite: 	#parentType:


FMNullMultivalueLink(Collection)>>sum:
	Receiver: #()
	Arguments and temporary variables: 
		aBlock: 	[ :m | m numberOfLinesOfCode ]
		sum: 	nil
		sample: 	nil
	Receiver's instance variables: 
		selector: 	#methods
		owner: 	PlaceAdController in ch::unibe::ese::team1::controller (Class)
		opposite: 	#parentType:


[ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ] in [ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		e: 	PlaceAdController in ch::unibe::ese::team1::controller (Class)
	Receiver's instance variables: 
nil

BlockClosure>>rtValue:
	Receiver: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ]
	Arguments and temporary variables: 
		valueOrArray: 	PlaceAdController in ch::unibe::ese::team1::controller (Class)
	Receiver's instance variables: 
		outerContext: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		startpc: 	203
		numArgs: 	1


[ :el | 
| t |
t := transformation rtValue: (metricBlock rtValue: el model).
minValue := minValue min: t.
maxValue := maxValue max: t ] in RTMetricNormalizer>>normalizeHeight:min:max:using:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ]
		min: 	5
		max: 	30
		transformation: 	#yourself
		minValue: 	0
		maxValue: 	101
		el: 	a RTElement
		t: 	nil
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTGroup(OrderedCollection)>>do:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :el | 
| t |
t := transformation rtValue: (metricBlock rtValue: el mo...etc...
		index: 	9
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	55
		attributes: 	nil


RTMetricNormalizer>>normalizeHeight:min:max:using:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		minValue: 	0
		maxValue: 	101
		metricBlock: 	[ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ]
		min: 	5
		max: 	30
		transformation: 	#yourself
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:min:max:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ]
		minValue: 	5
		maxValue: 	30
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ]
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
	Receiver's instance variables: 
nil

[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		allAddedObject: 	a RTGroup()
		element: 	a RTElement
		g: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTEl...etc...
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


RTGroup(OrderedCollection)>>do:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: elem...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		attributes: 	nil


RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		allAddedObject: 	a RTGroup()
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel root....etc...
		itsSelection: 	a Text for 'v := RTView new.
els := RTBox new elementsOn: MooseMo...etc...
		itsSelectionString: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel r...etc...
	Receiver's instance variables: 
		ast: 	<<error during printing>>

RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(307757056)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (994@506)
		owner: 	a TransformWithLayoutMorph(864026624)
		submorphs: 	an Array(a RubPrimarySelectionMorph(171966464) a RubCursor(775159808...etc...
		fullBounds: 	(0@0) corner: (994@506)
		color: 	Color transparent
		extension: 	a MorphExtension (770703360) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(837812224)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(775159808)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(265027584))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	2072148
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2072150
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	2072148
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2072150
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	1988620
		lastStepMessage: 	nil
		lastCycleTime: 	2072148
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2072150
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
FMNullMultivalueLink(Collection)>>errorEmptyCollection
FMNullMultivalueLink(Collection)>>emptyCheck
FMNullMultivalueLink(Collection)>>anyOne
FMNullMultivalueLink(Collection)>>sum:
[ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ] in [ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
BlockClosure>>rtValue:
[ :el | 
| t |
t := transformation rtValue: (metricBlock rtValue: el model).
minValue := minValue min: t.
maxValue := maxValue max: t ] in RTMetricNormalizer>>normalizeHeight:min:max:using:
RTGroup(OrderedCollection)>>do:
RTMetricNormalizer>>normalizeHeight:min:max:using:
RTMetricNormalizer>>normalizeHeight:min:max:
RTMetricNormalizer>>normalizeHeight:
[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
RTGroup(OrderedCollection)>>do:
RTNest>>for:add:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: SmallInteger>>ifEmpty:
14 October 2015 4:59:38.101979 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

SmallInteger(Object)>>doesNotUnderstand: #ifEmpty:
	Receiver: 46
	Arguments and temporary variables: 
		aMessage: 	ifEmpty: [ 0 ]
		exception: 	MessageNotUnderstood: SmallInteger>>ifEmpty:
		resumeValue: 	nil
	Receiver's instance variables: 
46

[ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] in [ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] ] in [ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		e: 	BookmarkTestDataSaver in ch::unibe::ese::team1::test::testData (Class)
		m: 	BookmarkTestDataSaver>>saveTestData() (Method)
	Receiver's instance variables: 
nil

FMMultivalueLink(Collection)>>sum:
	Receiver: an Array(BookmarkTestDataSaver>>saveTestData() (Method))
	Arguments and temporary variables: 
		aBlock: 	[ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ]
		sum: 	nil
		sample: 	nil
	Receiver's instance variables: 
		values: 	an OrderedCollection(BookmarkTestDataSaver>>saveTestData() (Method))
		owner: 	BookmarkTestDataSaver in ch::unibe::ese::team1::test::testData (Class)
		opposite: 	#parentType:


[ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] ] in [ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		e: 	BookmarkTestDataSaver in ch::unibe::ese::team1::test::testData (Class)
	Receiver's instance variables: 
nil

BlockClosure>>rtValue:
	Receiver: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] ]
	Arguments and temporary variables: 
		valueOrArray: 	BookmarkTestDataSaver in ch::unibe::ese::team1::test::testData (C...etc...
	Receiver's instance variables: 
		outerContext: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		startpc: 	207
		numArgs: 	1


RTMetricNormalizer>>normalizeHeight:min:max:using:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		minValue: 	nil
		maxValue: 	nil
		metricBlock: 	[ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ...etc...
		min: 	5
		max: 	30
		transformation: 	#yourself
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:min:max:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ...etc...
		minValue: 	5
		maxValue: 	30
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ...etc...
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
	Receiver's instance variables: 
nil

[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		allAddedObject: 	a RTGroup()
		element: 	a RTElement
		g: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTEl...etc...
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


RTGroup(OrderedCollection)>>do:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: elem...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		attributes: 	nil


RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		allAddedObject: 	a RTGroup()
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel root....etc...
		itsSelection: 	a Text for 'v := RTView new.
els := RTBox new elementsOn: MooseMo...etc...
		itsSelectionString: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel r...etc...
	Receiver's instance variables: 
		ast: 	<<error during printing>>

RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(307757056)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (994@506)
		owner: 	a TransformWithLayoutMorph(864026624)
		submorphs: 	an Array(a RubPrimarySelectionMorph(171966464) a RubCursor(775159808...etc...
		fullBounds: 	(0@0) corner: (994@506)
		color: 	Color transparent
		extension: 	a MorphExtension (770703360) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(837812224)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(775159808)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(41680896))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2154380
		lastStepMessage: 	nil
		lastCycleTime: 	2183289
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2183291
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2154380
		lastStepMessage: 	nil
		lastCycleTime: 	2183289
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2183291
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2154380
		lastStepMessage: 	nil
		lastCycleTime: 	2183289
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2183291
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
SmallInteger(Object)>>doesNotUnderstand: #ifEmpty:
[ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] in [ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] ] in [ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
FMMultivalueLink(Collection)>>sum:
[ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] ] in [ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
BlockClosure>>rtValue:
RTMetricNormalizer>>normalizeHeight:min:max:using:
RTMetricNormalizer>>normalizeHeight:min:max:
RTMetricNormalizer>>normalizeHeight:
[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | e methods sum: [ :m | m numberOfLinesOfCode ifEmpty: [ 0 ] ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
RTGroup(OrderedCollection)>>do:
RTNest>>for:add:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: SmallInteger>>sum:
14 October 2015 5:00:33.797993 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

SmallInteger(Object)>>doesNotUnderstand: #sum:
	Receiver: 1
	Arguments and temporary variables: 
		aMessage: 	sum: [ :m | m numberOfLinesOfCode ]
		exception: 	MessageNotUnderstood: SmallInteger>>sum:
		resumeValue: 	nil
	Receiver's instance variables: 
1

[ :e | (e methods ifEmpty: [ 1 ]) sum: [ :m | m numberOfLinesOfCode ] ] in [ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | (e methods ifEmpty: [ 1 ]) sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		e: 	PlaceAdController in ch::unibe::ese::team1::controller (Class)
	Receiver's instance variables: 
nil

BlockClosure>>rtValue:
	Receiver: [ :e | (e methods ifEmpty: [ 1 ]) sum: [ :m | m numberOfLinesOfCode ] ]
	Arguments and temporary variables: 
		valueOrArray: 	PlaceAdController in ch::unibe::ese::team1::controller (Class)
	Receiver's instance variables: 
		outerContext: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		startpc: 	207
		numArgs: 	1


[ :el | 
| t |
t := transformation rtValue: (metricBlock rtValue: el model).
minValue := minValue min: t.
maxValue := maxValue max: t ] in RTMetricNormalizer>>normalizeHeight:min:max:using:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | (e methods ifEmpty: [ 1 ]) sum: [ :m | m numberOfLinesOfCod...etc...
		min: 	5
		max: 	30
		transformation: 	#yourself
		minValue: 	0
		maxValue: 	101
		el: 	a RTElement
		t: 	nil
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTGroup(OrderedCollection)>>do:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :el | 
| t |
t := transformation rtValue: (metricBlock rtValue: el mo...etc...
		index: 	9
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	55
		attributes: 	nil


RTMetricNormalizer>>normalizeHeight:min:max:using:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		minValue: 	0
		maxValue: 	101
		metricBlock: 	[ :e | (e methods ifEmpty: [ 1 ]) sum: [ :m | m numberOfLinesOfCod...etc...
		min: 	5
		max: 	30
		transformation: 	#yourself
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:min:max:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | (e methods ifEmpty: [ 1 ]) sum: [ :m | m numberOfLinesOfCod...etc...
		minValue: 	5
		maxValue: 	30
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | (e methods ifEmpty: [ 1 ]) sum: [ :m | m numberOfLinesOfCod...etc...
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | (e methods ifEmpty: [ 1 ]) sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
	Receiver's instance variables: 
nil

[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		allAddedObject: 	a RTGroup()
		element: 	a RTElement
		g: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTEl...etc...
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


RTGroup(OrderedCollection)>>do:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: elem...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		attributes: 	nil


RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		allAddedObject: 	a RTGroup()
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel root....etc...
		itsSelection: 	a Text for 'v := RTView new.
els := RTBox new elementsOn: MooseMo...etc...
		itsSelectionString: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel r...etc...
	Receiver's instance variables: 
		ast: 	<<error during printing>>

RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(307757056)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (994@506)
		owner: 	a TransformWithLayoutMorph(864026624)
		submorphs: 	an Array(a RubPrimarySelectionMorph(171966464) a RubCursor(775159808...etc...
		fullBounds: 	(0@0) corner: (994@506)
		color: 	Color transparent
		extension: 	a MorphExtension (770703360) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(837812224)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(775159808)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(901775360))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2154380
		lastStepMessage: 	nil
		lastCycleTime: 	2238943
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2238945
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2154380
		lastStepMessage: 	nil
		lastCycleTime: 	2238943
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2238945
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2154380
		lastStepMessage: 	nil
		lastCycleTime: 	2238943
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2238945
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
SmallInteger(Object)>>doesNotUnderstand: #sum:
[ :e | (e methods ifEmpty: [ 1 ]) sum: [ :m | m numberOfLinesOfCode ] ] in [ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | (e methods ifEmpty: [ 1 ]) sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
BlockClosure>>rtValue:
[ :el | 
| t |
t := transformation rtValue: (metricBlock rtValue: el model).
minValue := minValue min: t.
maxValue := maxValue max: t ] in RTMetricNormalizer>>normalizeHeight:min:max:using:
RTGroup(OrderedCollection)>>do:
RTMetricNormalizer>>normalizeHeight:min:max:using:
RTMetricNormalizer>>normalizeHeight:min:max:
RTMetricNormalizer>>normalizeHeight:
[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | (e methods ifEmpty: [ 1 ]) sum: [ :m | m numberOfLinesOfCode ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
RTGroup(OrderedCollection)>>do:
RTNest>>for:add:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "ifFalse:" is nil
14 October 2015 5:01:26.088878 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

UndefinedObject(Object)>>doesNotUnderstand: #ifFalse:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	ifFalse: (t1 namedTempAt: 4) methods
		exception: 	MessageNotUnderstood: receiver of "ifFalse:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>ExecuteUnOptimizedIn:
	Receiver: nil
	Arguments and temporary variables: 
		t1: 	[ :e | 
(e methods isEmpty
	ifTrue: [ 1 ])
	ifFalse: [ e methods sum: [ :m ...etc...
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>mustBeBooleanInMagic:
	Receiver: nil
	Arguments and temporary variables: 
		context: 	[ :e | 
(e methods isEmpty
	ifTrue: [ 1 ])
	ifFalse: [ e methods sum: ...etc...
		sendNode: 	RBMessageNode((e methods isEmpty
	ifTrue: [ 1 ])
	ifFalse: [ e method...etc...
		methodNode: 	ExecuteUnOptimizedIn: ThisContext
	^ ((ThisContext namedTempAt: 4) ...etc...
		method: 	UndefinedObject>>#ExecuteUnOptimizedIn:
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>mustBeBoolean
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

[ :e | 
(e methods isEmpty
	ifTrue: [ 1 ])
	ifFalse: [ e methods sum: [ :m | m numberOfLinesOfCode ] ] ] in [ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | 
				(e methods isEmpty
					ifTrue: [ 1 ])
					ifFalse: [ e methods sum: [ :m | m numberOfLinesOfCode ] ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		e: 	BookmarkTestDataSaver in ch::unibe::ese::team1::test::testData (Class)
	Receiver's instance variables: 
nil

BlockClosure>>rtValue:
	Receiver: [ :e | 
(e methods isEmpty
	ifTrue: [ 1 ])
	ifFalse: [ e methods sum: [ :m | m numberOfLin...etc...
	Arguments and temporary variables: 
		valueOrArray: 	BookmarkTestDataSaver in ch::unibe::ese::team1::test::testData (C...etc...
	Receiver's instance variables: 
		outerContext: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		startpc: 	215
		numArgs: 	1


RTMetricNormalizer>>normalizeHeight:min:max:using:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		minValue: 	nil
		maxValue: 	nil
		metricBlock: 	[ :e | 
(e methods isEmpty
	ifTrue: [ 1 ])
	ifFalse: [ e methods s...etc...
		min: 	5
		max: 	30
		transformation: 	#yourself
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:min:max:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | 
(e methods isEmpty
	ifTrue: [ 1 ])
	ifFalse: [ e methods s...etc...
		minValue: 	5
		maxValue: 	30
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | 
(e methods isEmpty
	ifTrue: [ 1 ])
	ifFalse: [ e methods s...etc...
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | 
				(e methods isEmpty
					ifTrue: [ 1 ])
					ifFalse: [ e methods sum: [ :m | m numberOfLinesOfCode ] ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
	Receiver's instance variables: 
nil

[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		allAddedObject: 	a RTGroup()
		element: 	a RTElement
		g: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTEl...etc...
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


RTGroup(OrderedCollection)>>do:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: elem...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		attributes: 	nil


RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) ...etc...
		allAddedObject: 	a RTGroup()
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel root....etc...
		itsSelection: 	a Text for 'v := RTView new.
els := RTBox new elementsOn: MooseMo...etc...
		itsSelectionString: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel r...etc...
	Receiver's instance variables: 
		ast: 	<<error during printing>>

RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(307757056)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (994@506)
		owner: 	a TransformWithLayoutMorph(864026624)
		submorphs: 	an Array(a RubPrimarySelectionMorph(171966464) a RubCursor(775159808...etc...
		fullBounds: 	(0@0) corner: (994@506)
		color: 	Color transparent
		extension: 	a MorphExtension (770703360) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(837812224)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(775159808)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(159907840))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2154380
		lastStepMessage: 	nil
		lastCycleTime: 	2291276
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2291278
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2154380
		lastStepMessage: 	nil
		lastCycleTime: 	2291276
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2291278
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2154380
		lastStepMessage: 	nil
		lastCycleTime: 	2291276
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2291278
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #ifFalse:
UndefinedObject>>ExecuteUnOptimizedIn:
UndefinedObject(Object)>>mustBeBooleanInMagic:
UndefinedObject(Object)>>mustBeBoolean
[ :e | 
(e methods isEmpty
	ifTrue: [ 1 ])
	ifFalse: [ e methods sum: [ :m | m numberOfLinesOfCode ] ] ] in [ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | 
				(e methods isEmpty
					ifTrue: [ 1 ])
					ifFalse: [ e methods sum: [ :m | m numberOfLinesOfCode ] ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
BlockClosure>>rtValue:
RTMetricNormalizer>>normalizeHeight:min:max:using:
RTMetricNormalizer>>normalizeHeight:min:max:
RTMetricNormalizer>>normalizeHeight:
[ :group :model | 
| nEls |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | 
				(e methods isEmpty
					ifTrue: [ 1 ])
					ifFalse: [ e methods sum: [ :m | m numberOfLinesOfCode ] ] ].
RTGridLayout on: group ] in UndefinedObject>>DoIt
[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
RTGroup(OrderedCollection)>>do:
RTNest>>for:add:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: FAMIXClass>>parent
14 October 2015 5:06:27.840836 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

FAMIXClass(Object)>>doesNotUnderstand: #parent
	Receiver: BookmarkTestDataSaver in ch::unibe::ese::team1::test::testData (Class)
	Arguments and temporary variables: 
		aMessage: 	parent
		exception: 	MessageNotUnderstood: FAMIXClass>>parent
		resumeValue: 	nil
	Receiver's instance variables: 
		mooseID: 	2529
		state: 	a MooseDefaultState
		sourceAnchor: 	a FAMIXFileAnchor #'/Users/merino/research/ExploraESE/dataGit/201...etc...
		sourceLanguage: 	nil
		comments: 	an Array(/** 
 * This inserts som...into the database.
 */
 (comment ...etc...
		declaredSourceLanguage: 	nil
		name: 	'BookmarkTestDataSaver'
		isStub: 	false
		receivingInvocations: 	#()
		modifiers: 	an OrderedCollection('public')
		parentPackage: 	nil
		annotationInstances: 	an Array(a FAMIXAnnotationInstance #'<Default Package>::Se...etc...
		outgoingReferences: 	#()
		types: 	#()
		incomingReferences: 	#()
		functions: 	#()
		subInheritances: 	#()
		methods: 	an Array(BookmarkTestDataSaver>>saveTestData() (Method))
		container: 	ch (Namespace)::unibe (Namespace)::ese (Namespace)::team1 (Namespace...etc...
		superInheritances: 	an Array(BookmarkTestDataSaver -> Object (Inheritance))
		attributes: 	an Array(BookmarkTestDataSaver.adService (Attribute) BookmarkTestDa...etc...
		behavioursWithDeclaredType: 	#()
		structuresWithDeclaredType: 	an Array(TestDataSeeder.bookmarkTestDataSaver (Attr...etc...
		isInterface: 	false


ByteSymbol(Symbol)>>rtValue:
	Receiver: #parent
	Arguments and temporary variables: 
		anObject: 	BookmarkTestDataSaver in ch::unibe::ese::team1::test::testData (Class...etc...
	Receiver's instance variables: 
#parent

[ :e | 
aModel := aBlockOrASymbol rtValue: e model.
fromElement := self elementsToLookup elementFromModel: aModel.
fromElement ifNotNil: [ edges add: (self edgeFrom: fromElement to: e) ] ] in RTEdgeBuilder>>connectFrom:
	Receiver: a RTEdgeBuilder
	Arguments and temporary variables: 
		aBlockOrASymbol: 	#parent
		edges: 	a RTGroup()
		fromElement: 	nil
		aModel: 	nil
		e: 	a RTElement
	Receiver's instance variables: 
		view: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		interactionBuilder: 	a RTInteractionBuilder
		shapeBuilder: 	a RTShapeBuilder
		layoutBuilder: 	nil
		title: 	'Roassal'
		metricNormalizer: 	nil
		allowRepetition: 	false
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		elementsToLookup: 	nil
		shouldMoveBehind: 	false
		shouldNotBeUsedInLayout: 	true


RTGroup(OrderedCollection)>>do:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :e | 
aModel := aBlockOrASymbol rtValue: e model.
fromElement := self...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	55
		attributes: 	nil


RTEdgeBuilder>>connectFrom:
	Receiver: a RTEdgeBuilder
	Arguments and temporary variables: 
		fromElement: 	nil
		aModel: 	nil
		aBlockOrASymbol: 	#parent
		edges: 	a RTGroup()
	Receiver's instance variables: 
		view: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		interactionBuilder: 	a RTInteractionBuilder
		shapeBuilder: 	a RTShapeBuilder
		layoutBuilder: 	nil
		title: 	'Roassal'
		metricNormalizer: 	nil
		allowRepetition: 	false
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		elementsToLookup: 	nil
		shouldMoveBehind: 	false
		shouldNotBeUsedInLayout: 	true


[ :group :model | 
| nEls edges |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | 
				e methods isEmpty
					ifTrue: [ 1 ]
					ifFalse: [ e methods sum: [ :m | m numberOfLinesOfCode ] ] ].
edges := RTEdgeBuilder new
	view: group;
	objects: model allModelClasses;
	connectFrom: #parent.
RTTreeLayout on: nEls edges: edges ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		group: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a ...etc...
		model: 	a MooseModel #'team1-2014'(5072)
		nEls: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		edges: 	nil
	Receiver's instance variables: 
nil

[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls edges |
nEls := (RTBox new color: Color...etc...
		allAddedObject: 	a RTGroup()
		element: 	a RTElement
		g: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTEl...etc...
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


RTGroup(OrderedCollection)>>do:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: elem...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		attributes: 	nil


RTNest>>for:add:
	Receiver: a RTNest
	Arguments and temporary variables: 
		collectionOfElements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement...etc...
		aTwoArgBlock: 	[ :group :model | 
| nEls edges |
nEls := (RTBox new color: Color...etc...
		allAddedObject: 	a RTGroup()
	Receiver's instance variables: 
		layout: 	nil
		padding: 	5
		behavior: 	a RTNoBehavior
		view: 	nil
		labelShape: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel root....etc...
		itsSelection: 	a Text for 'v := RTView new.
els := RTBox new elementsOn: MooseMo...etc...
		itsSelectionString: 	'v := RTView new.
els := RTBox new elementsOn: MooseModel r...etc...
	Receiver's instance variables: 
		ast: 	<<error during printing>>

RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(307757056)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(307757056)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (994@639)
		owner: 	a TransformWithLayoutMorph(864026624)
		submorphs: 	an Array(a RubPrimarySelectionMorph(171966464) a RubCursor(775159808...etc...
		fullBounds: 	(0@0) corner: (994@639)
		color: 	Color transparent
		extension: 	a MorphExtension (770703360) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(837812224)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(775159808)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(248774656))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(760217600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2429576
		lastStepMessage: 	nil
		lastCycleTime: 	2593079
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2593081
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2429576
		lastStepMessage: 	nil
		lastCycleTime: 	2593079
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2593081
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2429576
		lastStepMessage: 	nil
		lastCycleTime: 	2593079
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775159808)))
		lastAlarmTime: 	2593081
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(337117184) a GL...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
FAMIXClass(Object)>>doesNotUnderstand: #parent
ByteSymbol(Symbol)>>rtValue:
[ :e | 
aModel := aBlockOrASymbol rtValue: e model.
fromElement := self elementsToLookup elementFromModel: aModel.
fromElement ifNotNil: [ edges add: (self edgeFrom: fromElement to: e) ] ] in RTEdgeBuilder>>connectFrom:
RTGroup(OrderedCollection)>>do:
RTEdgeBuilder>>connectFrom:
[ :group :model | 
| nEls edges |
nEls := (RTBox new color: Color red) elementsOn: model allModelClasses.
group addAll: nEls.
RTMetricNormalizer new
	elements: nEls;
	normalizeHeight: [ :e | 
				e methods isEmpty
					ifTrue: [ 1 ]
					ifFalse: [ e methods sum: [ :m | m numberOfLinesOfCode ] ] ].
edges := RTEdgeBuilder new
	view: group;
	objects: model allModelClasses;
	connectFrom: #parent.
RTTreeLayout on: nEls edges: edges ] in UndefinedObject>>DoIt
[ :element | 
| g |
g := RTGroup new.
aTwoArgBlock value: g value: element model.
self doLayoutIfNecessaryOn: g.
self on: element nest: g.	"Add the elements in the view. If no view has been set, it try to use the view of the elements"
view isNil
	ifTrue: [ 
		element view
			ifNil: [ self error: 'Please, specify in RTNest a view to which elements have to be added in using #view:.' ].
		element view addAll: g ]
	ifFalse: [ view addAll: g ].
allAddedObject addAll: g ] in RTNest>>for:add:
RTGroup(OrderedCollection)>>do:
RTNest>>for:add:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: ByteSymbol>>sendTo:
14 October 2015 5:46:35.500893 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

ByteSymbol(Object)>>doesNotUnderstand: #sendTo:
	Receiver: #numberOfMethods
	Arguments and temporary variables: 
		aMessage: 	sendTo: BookmarkTestDataSaver in ch::unibe::ese::team1::test::testDat...etc...
		exception: 	MessageNotUnderstood: ByteSymbol>>sendTo:
		resumeValue: 	nil
	Receiver's instance variables: 
#numberOfMethods

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'a := #numberOfMethods.
a sendTo: MooseModel root first allMode...etc...
		itsSelection: 	a Text for 'a := #numberOfMethods.
a sendTo: MooseModel root firs...etc...
		itsSelectionString: 	'a := #numberOfMethods.
a sendTo: MooseModel root first all...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	a := #numberOfMethods.
	^ a sendTo: MooseModel root first allModelCl...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(998768640)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(998768640)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(719585280)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(998768640)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1058@50)
		owner: 	a TransformWithLayoutMorph(847511552)
		submorphs: 	an Array(a RubPrimarySelectionMorph(868220928) a RubCursor(359399424...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (475529216) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(809238528)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(359399424)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(151519232))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(719585280)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(19136512))(a DropListM...etc...
		lastStepTime: 	5000630
		lastStepMessage: 	nil
		lastCycleTime: 	5000650
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(359399424)))
		lastAlarmTime: 	5000630
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(1010565120) a N...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(19136512))(a DropListM...etc...
		lastStepTime: 	5000630
		lastStepMessage: 	nil
		lastCycleTime: 	5000650
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(359399424)))
		lastAlarmTime: 	5000630
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(19136512))(a DropListM...etc...
		lastStepTime: 	5000630
		lastStepMessage: 	nil
		lastCycleTime: 	5000650
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(359399424)))
		lastAlarmTime: 	5000630
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(1010565120) a N...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ByteSymbol(Object)>>doesNotUnderstand: #sendTo:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: FAMIXClass>>sendTo:
14 October 2015 5:46:51.649368 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

FAMIXClass(Object)>>doesNotUnderstand: #sendTo:
	Receiver: BookmarkTestDataSaver in ch::unibe::ese::team1::test::testData (Class)
	Arguments and temporary variables: 
		aMessage: 	sendTo: #numberOfMethods
		exception: 	MessageNotUnderstood: FAMIXClass>>sendTo:
		resumeValue: 	nil
	Receiver's instance variables: 
		mooseID: 	2529
		state: 	a MooseDefaultState
		sourceAnchor: 	a FAMIXFileAnchor #'/Users/merino/research/ExploraESE/dataGit/201...etc...
		sourceLanguage: 	nil
		comments: 	an Array(/** 
 * This inserts som...into the database.
 */
 (comment ...etc...
		declaredSourceLanguage: 	nil
		name: 	'BookmarkTestDataSaver'
		isStub: 	false
		receivingInvocations: 	#()
		modifiers: 	an OrderedCollection('public')
		parentPackage: 	nil
		annotationInstances: 	an Array(a FAMIXAnnotationInstance #'<Default Package>::Se...etc...
		outgoingReferences: 	#()
		types: 	#()
		incomingReferences: 	#()
		functions: 	#()
		subInheritances: 	#()
		methods: 	an Array(BookmarkTestDataSaver>>saveTestData() (Method))
		container: 	ch (Namespace)::unibe (Namespace)::ese (Namespace)::team1 (Namespace...etc...
		superInheritances: 	an Array(BookmarkTestDataSaver -> Object (Inheritance))
		attributes: 	an Array(BookmarkTestDataSaver.adService (Attribute) BookmarkTestDa...etc...
		behavioursWithDeclaredType: 	#()
		structuresWithDeclaredType: 	an Array(TestDataSeeder.bookmarkTestDataSaver (Attr...etc...
		isInterface: 	false


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'a := #numberOfMethods.
MooseModel root first allModelClasses f...etc...
		itsSelection: 	a Text for 'a := #numberOfMethods.
MooseModel root first allModel...etc...
		itsSelectionString: 	'a := #numberOfMethods.
MooseModel root first allModelClass...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	a := #numberOfMethods.
	^ MooseModel root first allModelClasses firs...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(998768640)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(998768640)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(719585280)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(998768640)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1058@50)
		owner: 	a TransformWithLayoutMorph(847511552)
		submorphs: 	an Array(a RubPrimarySelectionMorph(868220928) a RubCursor(359399424...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (475529216) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(809238528)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(359399424)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1019478016))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(719585280)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	5016789
		lastStepMessage: 	nil
		lastCycleTime: 	5016810
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(359399424)))
		lastAlarmTime: 	5016789
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(1010565120) a N...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	5016789
		lastStepMessage: 	nil
		lastCycleTime: 	5016810
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(359399424)))
		lastAlarmTime: 	5016789
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	5016789
		lastStepMessage: 	nil
		lastCycleTime: 	5016810
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(359399424)))
		lastAlarmTime: 	5016789
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(1010565120) a N...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
FAMIXClass(Object)>>doesNotUnderstand: #sendTo:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: PolyCell>>new
14 October 2015 6:02:01.018656 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

PolyCell(Object)>>doesNotUnderstand: #new
	Receiver: a PolyCell
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: PolyCell>>new
		resumeValue: 	nil
	Receiver's instance variables: 
		metrics: 	nil
		systems: 	nil
		v: 	nil


PolyCell>>example
	Receiver: a PolyCell
	Arguments and temporary variables: 
		p: 	nil
	Receiver's instance variables: 
		metrics: 	nil
		systems: 	nil
		v: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'PolyCell new example'
		itsSelection: 	a Text for 'PolyCell new example'
		itsSelectionString: 	'PolyCell new example'
	Receiver's instance variables: 
		ast: 	DoIt
	^ PolyCell new example
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(578813952)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(578813952)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(957349888)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(578813952)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1058@31)
		owner: 	a TransformWithLayoutMorph(11534336)
		submorphs: 	an Array(a RubCursor(952893440) a RubPrimarySelectionMorph(98828288)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1050935296) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1047003136)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(952893440)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(745013248))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(957349888)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	5926152
		lastStepMessage: 	nil
		lastCycleTime: 	5926172
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	5926152
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(456392704) a Na...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	5926152
		lastStepMessage: 	nil
		lastCycleTime: 	5926172
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	5926152
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	5926152
		lastStepMessage: 	nil
		lastCycleTime: 	5926172
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	5926152
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(456392704) a Na...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
PolyCell(Object)>>doesNotUnderstand: #new
PolyCell>>example
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: RTElement>>allMethods
14 October 2015 6:03:11.141661 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

RTElement(Object)>>doesNotUnderstand: #allMethods
	Receiver: a RTElement
	Arguments and temporary variables: 
		aMessage: 	allMethods
		exception: 	MessageNotUnderstood: RTElement>>allMethods
		resumeValue: 	nil
	Receiver's instance variables: 
		announcer: 	nil
		attributes: 	nil
		isFixed: 	false
		model: 	a MooseModel #'team1-2014'(5072)
		shape: 	a RTBox
		trachelShape: 	a TRBoxShape
		view: 	nil
		connectedEdges: 	nil
		shouldUpdateEdges: 	true


[ :m | 
m first = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ :c | c perform: m second ] ]
	ifFalse: [ aMooseModel allMethods sum: [ :c | c perform: m second ] ] ] in PolyCell>>getMetricValue:
	Receiver: a PolyCell
	Arguments and temporary variables: 
		aMooseModel: 	a RTElement
		m: 	#(#numberOfLinesOfCode #method)
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


Array(SequenceableCollection)>>collect:
	Receiver: #(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn #method) #(#cyclomat...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :m | 
m first = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ ...etc...
		newCollection: 	#(nil nil nil nil)
		index: 	1
	Receiver's instance variables: 
#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn #method) #(#cyclomat...etc...

PolyCell>>getMetricValue:
	Receiver: a PolyCell
	Arguments and temporary variables: 
		aMooseModel: 	a RTElement
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


[ :a :b | (self getMetricValue: a) first >= (self getMetricValue: b) first ] in PolyCell>>visualise
	Receiver: a PolyCell
	Arguments and temporary variables: 
		els: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RT...etc...
		a: 	a RTElement
		b: 	a RTElement
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


SortedCollection>>sort:to:
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 
		i: 	1
		j: 	8
		di: 	a RTElement
		dij: 	nil
		dj: 	a RTElement
		tt: 	nil
		ij: 	nil
		k: 	nil
		l: 	nil
		n: 	8
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (self getMetricValue: a) first >= (self getMetricValue: b)...etc...


SortedCollection>>reSort
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (self getMetricValue: a) first >= (self getMetricValue: b)...etc...


SortedCollection>>addAll:
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 
		aCollection: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (self getMetricValue: a) first >= (self getMetricValue: b)...etc...


RTGroup(Collection)>>asSortedCollection:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aSortBlock: 	[ :a :b | (self getMetricValue: a) first >= (self getMetricValue: b...etc...
		aSortedCollection: 	a SortedCollection(a RTElement a RTElement a RTElement a RTE...etc...
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		attributes: 	nil


PolyCell>>visualise
	Receiver: a PolyCell
	Arguments and temporary variables: 
		els: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RT...etc...
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


PolyCell>>example
	Receiver: a PolyCell
	Arguments and temporary variables: 

	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'PolyCell new example'
		itsSelection: 	a Text for 'PolyCell new example'
		itsSelectionString: 	'PolyCell new example'
	Receiver's instance variables: 
		ast: 	DoIt
	^ PolyCell new example
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(578813952)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(578813952)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(957349888)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(578813952)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1058@31)
		owner: 	a TransformWithLayoutMorph(11534336)
		submorphs: 	an Array(a RubCursor(952893440) a RubPrimarySelectionMorph(98828288)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1050935296) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1047003136)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(952893440)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(309329920))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(957349888)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	5996270
		lastStepMessage: 	nil
		lastCycleTime: 	5996291
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	5996270
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(456392704) a Na...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	5996270
		lastStepMessage: 	nil
		lastCycleTime: 	5996291
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	5996270
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	5996270
		lastStepMessage: 	nil
		lastCycleTime: 	5996291
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	5996270
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(456392704) a Na...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
RTElement(Object)>>doesNotUnderstand: #allMethods
[ :m | 
m first = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ :c | c perform: m second ] ]
	ifFalse: [ aMooseModel allMethods sum: [ :c | c perform: m second ] ] ] in PolyCell>>getMetricValue:
Array(SequenceableCollection)>>collect:
PolyCell>>getMetricValue:
[ :a :b | (self getMetricValue: a) first >= (self getMetricValue: b) first ] in PolyCell>>visualise
SortedCollection>>sort:to:
SortedCollection>>reSort
SortedCollection>>addAll:
RTGroup(Collection)>>asSortedCollection:
PolyCell>>visualise
PolyCell>>example
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: FAMIXMethod>>method
14 October 2015 6:03:44.312005 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

FAMIXMethod(Object)>>doesNotUnderstand: #method
	Receiver: User>>setGender(Gender) (Method)
	Arguments and temporary variables: 
		aMessage: 	method
		exception: 	MessageNotUnderstood: FAMIXMethod>>method
		resumeValue: 	nil
	Receiver's instance variables: 
		mooseID: 	351
		state: 	a MooseDefaultState
		sourceAnchor: 	a FAMIXFileAnchor #'/Users/merino/research/ExploraESE/dataGit/201...etc...
		sourceLanguage: 	nil
		comments: 	#()
		declaredSourceLanguage: 	nil
		name: 	'setGender'
		isStub: 	false
		receivingInvocations: 	#()
		modifiers: 	an OrderedCollection('public')
		parentPackage: 	nil
		annotationInstances: 	#()
		outgoingReferences: 	#()
		types: 	#()
		incomingReferences: 	#()
		functions: 	#()
		outgoingInvocations: 	#()
		incomingInvocations: 	an Array(createUser -> user#setGender(gender) (Invocation)...etc...
		localVariables: 	#()
		implicitVariables: 	#()
		parameters: 	an Array(gender (parameter in User>>setGender(Gender) (Method)))
		signature: 	'setGender(Gender)'
		accesses: 	an Array(setGender -> gender (Access))
		declaredType: 	void (PrimitiveType)
		kind: 	nil
		parentType: 	User in ch::unibe::ese::team1::model (Class)


[ :c | c perform: m second ] in [ :m | 
m first = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ :c | c perform: m second ] ]
	ifFalse: [ aMooseModel allMethods sum: [ :c | c perform: m second ] ] ] in PolyCell>>getMetricValue:
	Receiver: a PolyCell
	Arguments and temporary variables: 
		aMooseModel: 	a MooseModel #'team1-2014'(5072)
		m: 	#(#numberOfLinesOfCode #method)
		c: 	User>>setGender(Gender) (Method)
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


[ :sum :each | sum + (aSymbolOrBlock value: each) ] in FAMIXMethodGroup(MooseGroup)>>sum:
	Receiver: All famixmethods (407 FAMIXMethods)
	Arguments and temporary variables: 
		aSymbolOrBlock: 	[ :c | c perform: m second ]
		sum: 	0
		each: 	User>>setGender(Gender) (Method)
	Receiver's instance variables: 
		mooseID: 	5101
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(User>>setGender(Gender) (Method) Picture>>s...etc...


[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) Ad>>ge...etc...
	Arguments and temporary variables: 
		thisValue: 	0
		binaryBlock: 	[ :sum :each | sum + (aSymbolOrBlock value: each) ]
		nextValue: 	0
		each: 	User>>setGender(Gender) (Method)
	Receiver's instance variables: 
		array: 	an Array(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) ...etc...
		firstIndex: 	1
		lastIndex: 	407


OrderedCollection>>do:
	Receiver: an OrderedCollection(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) Ad>>ge...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :each | nextValue := binaryBlock value: nextValue value: each ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) ...etc...
		firstIndex: 	1
		lastIndex: 	407


OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) Ad>>ge...etc...
	Arguments and temporary variables: 
		nextValue: 	0
		thisValue: 	0
		binaryBlock: 	[ :sum :each | sum + (aSymbolOrBlock value: each) ]
	Receiver's instance variables: 
		array: 	an Array(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) ...etc...
		firstIndex: 	1
		lastIndex: 	407


FAMIXMethodGroup(MooseAbstractGroup)>>inject:into:
	Receiver: All famixmethods (407 FAMIXMethods)
	Arguments and temporary variables: 
		neutral: 	0
		aBinaryBlock: 	[ :sum :each | sum + (aSymbolOrBlock value: each) ]
	Receiver's instance variables: 
		mooseID: 	5101
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(User>>setGender(Gender) (Method) Picture>>s...etc...


FAMIXMethodGroup(MooseGroup)>>sum:
	Receiver: All famixmethods (407 FAMIXMethods)
	Arguments and temporary variables: 
		aSymbolOrBlock: 	[ :c | c perform: m second ]
	Receiver's instance variables: 
		mooseID: 	5101
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(User>>setGender(Gender) (Method) Picture>>s...etc...


[ :m | 
m first = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ :c | c perform: m second ] ]
	ifFalse: [ aMooseModel allMethods sum: [ :c | c perform: m second ] ] ] in PolyCell>>getMetricValue:
	Receiver: a PolyCell
	Arguments and temporary variables: 
		aMooseModel: 	a MooseModel #'team1-2014'(5072)
		m: 	#(#numberOfLinesOfCode #method)
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


Array(SequenceableCollection)>>collect:
	Receiver: #(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn #method) #(#cyclomat...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :m | 
m first = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ ...etc...
		newCollection: 	#(nil nil nil nil)
		index: 	1
	Receiver's instance variables: 
#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn #method) #(#cyclomat...etc...

PolyCell>>getMetricValue:
	Receiver: a PolyCell
	Arguments and temporary variables: 
		aMooseModel: 	a MooseModel #'team1-2014'(5072)
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


[ :a :b | (self getMetricValue: a model) first >= (self getMetricValue: b model) first ] in PolyCell>>visualise
	Receiver: a PolyCell
	Arguments and temporary variables: 
		els: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RT...etc...
		a: 	a RTElement
		b: 	a RTElement
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


SortedCollection>>sort:to:
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 
		i: 	1
		j: 	8
		di: 	a RTElement
		dij: 	nil
		dj: 	a RTElement
		tt: 	nil
		ij: 	nil
		k: 	nil
		l: 	nil
		n: 	8
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (self getMetricValue: a model) first >= (self getMetricVal...etc...


SortedCollection>>reSort
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (self getMetricValue: a model) first >= (self getMetricVal...etc...


SortedCollection>>addAll:
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 
		aCollection: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (self getMetricValue: a model) first >= (self getMetricVal...etc...


RTGroup(Collection)>>asSortedCollection:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aSortBlock: 	[ :a :b | (self getMetricValue: a model) first >= (self getMetricVa...etc...
		aSortedCollection: 	a SortedCollection(a RTElement a RTElement a RTElement a RTE...etc...
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		attributes: 	nil


PolyCell>>visualise
	Receiver: a PolyCell
	Arguments and temporary variables: 
		els: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RT...etc...
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


PolyCell>>example
	Receiver: a PolyCell
	Arguments and temporary variables: 

	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'PolyCell new example'
		itsSelection: 	a Text for 'PolyCell new example'
		itsSelectionString: 	'PolyCell new example'
	Receiver's instance variables: 
		ast: 	DoIt
	^ PolyCell new example
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(578813952)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(578813952)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(957349888)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(578813952)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1058@31)
		owner: 	a TransformWithLayoutMorph(11534336)
		submorphs: 	an Array(a RubCursor(952893440) a RubPrimarySelectionMorph(98828288)...etc...
		fullBounds: 	(0@0) corner: (1058@31)
		color: 	Color transparent
		extension: 	a MorphExtension (1050935296) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1047003136)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(952893440)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(260833280))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(957349888)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	6029513
		lastStepMessage: 	nil
		lastCycleTime: 	6029508
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	6029513
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(456392704) a Na...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	6029513
		lastStepMessage: 	nil
		lastCycleTime: 	6029508
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	6029513
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(642514944))(a SearchMorp...etc...
		lastStepTime: 	6029513
		lastStepMessage: 	nil
		lastCycleTime: 	6029508
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	6029513
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(456392704) a Na...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
FAMIXMethod(Object)>>doesNotUnderstand: #method
[ :c | c perform: m second ] in [ :m | 
m first = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ :c | c perform: m second ] ]
	ifFalse: [ aMooseModel allMethods sum: [ :c | c perform: m second ] ] ] in PolyCell>>getMetricValue:
[ :sum :each | sum + (aSymbolOrBlock value: each) ] in FAMIXMethodGroup(MooseGroup)>>sum:
[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:
OrderedCollection>>do:
OrderedCollection(Collection)>>inject:into:
FAMIXMethodGroup(MooseAbstractGroup)>>inject:into:
FAMIXMethodGroup(MooseGroup)>>sum:
[ :m | 
m first = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ :c | c perform: m second ] ]
	ifFalse: [ aMooseModel allMethods sum: [ :c | c perform: m second ] ] ] in PolyCell>>getMetricValue:
Array(SequenceableCollection)>>collect:
PolyCell>>getMetricValue:
[ :a :b | (self getMetricValue: a model) first >= (self getMetricValue: b model) first ] in PolyCell>>visualise
SortedCollection>>sort:to:
SortedCollection>>reSort
SortedCollection>>addAll:
RTGroup(Collection)>>asSortedCollection:
PolyCell>>visualise
PolyCell>>example
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: FAMIXMethod>>fanIn
14 October 2015 6:04:32.58209 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

FAMIXMethod(Object)>>doesNotUnderstand: #fanIn
	Receiver: User>>setGender(Gender) (Method)
	Arguments and temporary variables: 
		aMessage: 	fanIn
		exception: 	MessageNotUnderstood: FAMIXMethod>>fanIn
		resumeValue: 	nil
	Receiver's instance variables: 
		mooseID: 	351
		state: 	a MooseDefaultState
		sourceAnchor: 	a FAMIXFileAnchor #'/Users/merino/research/ExploraESE/dataGit/201...etc...
		sourceLanguage: 	nil
		comments: 	#()
		declaredSourceLanguage: 	nil
		name: 	'setGender'
		isStub: 	false
		receivingInvocations: 	#()
		modifiers: 	an OrderedCollection('public')
		parentPackage: 	nil
		annotationInstances: 	#()
		outgoingReferences: 	#()
		types: 	#()
		incomingReferences: 	#()
		functions: 	#()
		outgoingInvocations: 	#()
		incomingInvocations: 	an Array(createUser -> user#setGender(gender) (Invocation)...etc...
		localVariables: 	#()
		implicitVariables: 	#()
		parameters: 	an Array(gender (parameter in User>>setGender(Gender) (Method)))
		signature: 	'setGender(Gender)'
		accesses: 	an Array(setGender -> gender (Access))
		declaredType: 	void (PrimitiveType)
		kind: 	nil
		parentType: 	User in ch::unibe::ese::team1::model (Class)


[ :c | c perform: m first ] in [ :m | 
m second = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ :c | c perform: m first ] ]
	ifFalse: [ aMooseModel allMethods sum: [ :c | c perform: m first ] ] ] in PolyCell>>getMetricValue:
	Receiver: a PolyCell
	Arguments and temporary variables: 
		aMooseModel: 	a MooseModel #'team1-2014'(5072)
		m: 	#(#fanIn #method)
		c: 	User>>setGender(Gender) (Method)
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


[ :sum :each | sum + (aSymbolOrBlock value: each) ] in FAMIXMethodGroup(MooseGroup)>>sum:
	Receiver: All famixmethods (407 FAMIXMethods)
	Arguments and temporary variables: 
		aSymbolOrBlock: 	[ :c | c perform: m first ]
		sum: 	0
		each: 	User>>setGender(Gender) (Method)
	Receiver's instance variables: 
		mooseID: 	5101
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(User>>setGender(Gender) (Method) Picture>>s...etc...


[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) Ad>>ge...etc...
	Arguments and temporary variables: 
		thisValue: 	0
		binaryBlock: 	[ :sum :each | sum + (aSymbolOrBlock value: each) ]
		nextValue: 	0
		each: 	User>>setGender(Gender) (Method)
	Receiver's instance variables: 
		array: 	an Array(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) ...etc...
		firstIndex: 	1
		lastIndex: 	407


OrderedCollection>>do:
	Receiver: an OrderedCollection(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) Ad>>ge...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :each | nextValue := binaryBlock value: nextValue value: each ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) ...etc...
		firstIndex: 	1
		lastIndex: 	407


OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) Ad>>ge...etc...
	Arguments and temporary variables: 
		nextValue: 	0
		thisValue: 	0
		binaryBlock: 	[ :sum :each | sum + (aSymbolOrBlock value: each) ]
	Receiver's instance variables: 
		array: 	an Array(User>>setGender(Gender) (Method) Picture>>setId(long) (Method) ...etc...
		firstIndex: 	1
		lastIndex: 	407


FAMIXMethodGroup(MooseAbstractGroup)>>inject:into:
	Receiver: All famixmethods (407 FAMIXMethods)
	Arguments and temporary variables: 
		neutral: 	0
		aBinaryBlock: 	[ :sum :each | sum + (aSymbolOrBlock value: each) ]
	Receiver's instance variables: 
		mooseID: 	5101
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(User>>setGender(Gender) (Method) Picture>>s...etc...


FAMIXMethodGroup(MooseGroup)>>sum:
	Receiver: All famixmethods (407 FAMIXMethods)
	Arguments and temporary variables: 
		aSymbolOrBlock: 	[ :c | c perform: m first ]
	Receiver's instance variables: 
		mooseID: 	5101
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(User>>setGender(Gender) (Method) Picture>>s...etc...


[ :m | 
m second = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ :c | c perform: m first ] ]
	ifFalse: [ aMooseModel allMethods sum: [ :c | c perform: m first ] ] ] in PolyCell>>getMetricValue:
	Receiver: a PolyCell
	Arguments and temporary variables: 
		aMooseModel: 	a MooseModel #'team1-2014'(5072)
		m: 	#(#fanIn #method)
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


Array(SequenceableCollection)>>collect:
	Receiver: #(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn #method) #(#cyclomat...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :m | 
m second = #class
	ifTrue: [ aMooseModel allModelClasses sum: [...etc...
		newCollection: 	#(3384 316 nil nil)
		index: 	3
	Receiver's instance variables: 
#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn #method) #(#cyclomat...etc...

PolyCell>>getMetricValue:
	Receiver: a PolyCell
	Arguments and temporary variables: 
		aMooseModel: 	a MooseModel #'team1-2014'(5072)
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


[ :a :b | (self getMetricValue: a model) first >= (self getMetricValue: b model) first ] in PolyCell>>visualise
	Receiver: a PolyCell
	Arguments and temporary variables: 
		els: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RT...etc...
		a: 	a RTElement
		b: 	a RTElement
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


SortedCollection>>sort:to:
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 
		i: 	1
		j: 	8
		di: 	a RTElement
		dij: 	nil
		dj: 	a RTElement
		tt: 	nil
		ij: 	nil
		k: 	nil
		l: 	nil
		n: 	8
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (self getMetricValue: a model) first >= (self getMetricVal...etc...


SortedCollection>>reSort
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (self getMetricValue: a model) first >= (self getMetricVal...etc...


SortedCollection>>addAll:
	Receiver: a SortedCollection(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
	Arguments and temporary variables: 
		aCollection: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		sortBlock: 	[ :a :b | (self getMetricValue: a model) first >= (self getMetricVal...etc...


RTGroup(Collection)>>asSortedCollection:
	Receiver: a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RTElement a RTElem...etc...
	Arguments and temporary variables: 
		aSortBlock: 	[ :a :b | (self getMetricValue: a model) first >= (self getMetricVa...etc...
		aSortedCollection: 	a SortedCollection(a RTElement a RTElement a RTElement a RTE...etc...
	Receiver's instance variables: 
		array: 	an Array(a RTElement a RTElement a RTElement a RTElement a RTElement a R...etc...
		firstIndex: 	1
		lastIndex: 	8
		attributes: 	nil


PolyCell>>visualise
	Receiver: a PolyCell
	Arguments and temporary variables: 
		els: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RT...etc...
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


PolyCell>>example
	Receiver: a PolyCell
	Arguments and temporary variables: 

	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'PolyCell new example'
		itsSelection: 	a Text for 'PolyCell new example'
		itsSelectionString: 	'PolyCell new example'
	Receiver's instance variables: 
		ast: 	DoIt
	^ PolyCell new example
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(578813952)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(578813952)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(957349888)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(578813952)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1058@31)
		owner: 	a TransformWithLayoutMorph(11534336)
		submorphs: 	an Array(a RubCursor(952893440) a RubPrimarySelectionMorph(98828288)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1050935296) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1047003136)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(952893440)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(934281216))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(957349888)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(19136512))(a DropListM...etc...
		lastStepTime: 	6077712
		lastStepMessage: 	nil
		lastCycleTime: 	6077733
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	6077712
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(456392704) a Na...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(19136512))(a DropListM...etc...
		lastStepTime: 	6077712
		lastStepMessage: 	nil
		lastCycleTime: 	6077733
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	6077712
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(19136512))(a DropListM...etc...
		lastStepTime: 	6077712
		lastStepMessage: 	nil
		lastCycleTime: 	6077733
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	6077712
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(456392704) a Na...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
FAMIXMethod(Object)>>doesNotUnderstand: #fanIn
[ :c | c perform: m first ] in [ :m | 
m second = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ :c | c perform: m first ] ]
	ifFalse: [ aMooseModel allMethods sum: [ :c | c perform: m first ] ] ] in PolyCell>>getMetricValue:
[ :sum :each | sum + (aSymbolOrBlock value: each) ] in FAMIXMethodGroup(MooseGroup)>>sum:
[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:
OrderedCollection>>do:
OrderedCollection(Collection)>>inject:into:
FAMIXMethodGroup(MooseAbstractGroup)>>inject:into:
FAMIXMethodGroup(MooseGroup)>>sum:
[ :m | 
m second = #class
	ifTrue: [ aMooseModel allModelClasses sum: [ :c | c perform: m first ] ]
	ifFalse: [ aMooseModel allMethods sum: [ :c | c perform: m first ] ] ] in PolyCell>>getMetricValue:
Array(SequenceableCollection)>>collect:
PolyCell>>getMetricValue:
[ :a :b | (self getMetricValue: a model) first >= (self getMetricValue: b model) first ] in PolyCell>>visualise
SortedCollection>>sort:to:
SortedCollection>>reSort
SortedCollection>>addAll:
RTGroup(Collection)>>asSortedCollection:
PolyCell>>visualise
PolyCell>>example
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: MooseModel>>model
14 October 2015 6:04:48.681443 pm

VM: Mac OS - intel - 1094 - NBCoInterpreter NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
NBCogit NativeBoost-CogPlugin-GuillermoPolito.19 uuid: acc98e51-2fba-4841-a965-2975997bba66 Dec 26 2013
https://github.com/pharo-project/pharo-vm.git Commit: e698e14f38003258fa49506b14307d83863a5ac1 Date: 2013-12-16 06:32:59 -0800 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #14780

Image: Pharo5.0 [Latest update: #50087]

MooseModel(Object)>>doesNotUnderstand: #model
	Receiver: a MooseModel #'team1-2014'(5072)
	Arguments and temporary variables: 
		aMessage: 	model
		exception: 	MessageNotUnderstood: MooseModel>>model
		resumeValue: 	nil
	Receiver's instance variables: 
		mooseID: 	2
		state: 	a MooseDefaultState
		storage: 	a MooseGroupRuntimeStorage(saveTestData -> adLuzern#setSmokers(false) ...etc...
		sourceLanguage: 	a FAMIXJavaSourceLanguage #Java
		name: 	'team1-2014'


[ :e | (self getMetricValue: e model) second ] in PolyCell>>visualise
	Receiver: a PolyCell
	Arguments and temporary variables: 
		els: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RT...etc...
		e: 	a MooseModel #'team1-2014'(5072)
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


BlockClosure>>rtValue:
	Receiver: [ :e | (self getMetricValue: e model) second ]
	Arguments and temporary variables: 
		valueOrArray: 	a MooseModel #'team1-2014'(5072)
	Receiver's instance variables: 
		outerContext: 	PolyCell>>visualise
		startpc: 	149
		numArgs: 	1


RTMetricNormalizer>>normalizeHeight:min:max:using:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		minValue: 	nil
		maxValue: 	nil
		metricBlock: 	[ :e | (self getMetricValue: e model) second ]
		min: 	5
		max: 	30
		transformation: 	#yourself
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:min:max:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | (self getMetricValue: e model) second ]
		minValue: 	5
		maxValue: 	30
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


RTMetricNormalizer>>normalizeHeight:
	Receiver: a RTMetricNormalizer
	Arguments and temporary variables: 
		metricBlock: 	[ :e | (self getMetricValue: e model) second ]
	Receiver's instance variables: 
		elements: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement...etc...
		view: 	nil
		translator: 	a RTDirectLayoutTranslator


PolyCell>>visualise
	Receiver: a PolyCell
	Arguments and temporary variables: 
		els: 	a RTGroup(a RTElement a RTElement a RTElement a RTElement a RTElement a RT...etc...
	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


PolyCell>>example
	Receiver: a PolyCell
	Arguments and temporary variables: 

	Receiver's instance variables: 
		metrics: 	#(#(#numberOfLinesOfCode #method) #(#numberOfMethods #class) #(#fanIn ...etc...
		systems: 	a MooseModel #Root(8)
		v: 	a RTView


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'PolyCell new example'
		itsSelection: 	a Text for 'PolyCell new example'
		itsSelectionString: 	'PolyCell new example'
	Receiver's instance variables: 
		ast: 	DoIt
	^ PolyCell new example
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil
		useFaultyForParsing: 	false


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(578813952)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(578813952)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(957349888)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(578813952)
	Arguments and temporary variables: 
		editBlock: 	[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
tex...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1058@31)
		owner: 	a TransformWithLayoutMorph(11534336)
		submorphs: 	an Array(a RubCursor(952893440) a RubPrimarySelectionMorph(98828288)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1050935296) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1047003136)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(952893440)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(960495616))
		getMenuPolicy: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoPlaygroundRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(957349888)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(19136512))(a DropListM...etc...
		lastStepTime: 	6093771
		lastStepMessage: 	nil
		lastCycleTime: 	6093792
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	6093771
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(456392704) a Na...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(19136512))(a DropListM...etc...
		lastStepTime: 	6093771
		lastStepMessage: 	nil
		lastCycleTime: 	6093792
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	6093771
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(511705088) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(760479744))
		viewBox: 	(0@0) corner: (2560@1550)
		canvas: 	a FormCanvas on: DisplayScreen(2560x1550x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(19136512))(a DropListM...etc...
		lastStepTime: 	6093771
		lastStepMessage: 	nil
		lastCycleTime: 	6093792
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(952893440)))
		lastAlarmTime: 	6093771
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(511705088) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2560@1550)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(984088576) a GLMSystemWindow(456392704) a Na...etc...
		fullBounds: 	(0@0) corner: (2560@1550)
		color: 	Color white
		extension: 	a MorphExtension (552861696) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
MooseModel(Object)>>doesNotUnderstand: #model
[ :e | (self getMetricValue: e model) second ] in PolyCell>>visualise
BlockClosure>>rtValue:
RTMetricNormalizer>>normalizeHeight:min:max:using:
RTMetricNormalizer>>normalizeHeight:min:max:
RTMetricNormalizer>>normalizeHeight:
PolyCell>>visualise
PolyCell>>example
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ 
textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ 
textMorph textArea
	handleEdit: [ 
		textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoPlaygroundRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ 
[ 
World doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ 
self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

